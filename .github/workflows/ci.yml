name: CI
on:
  - push
#   - pull_request
jobs:
  test:
    env: 
      GKS_ENCODING: "utf8"
      GKSwstype: "nul"
    name: ${{ matrix.test_set }} - ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.version == 'nightly' || matrix.version == '^1.11.0-0' }}
    strategy:
      fail-fast: false
      matrix:
        test_set: ["basic", "plots", "higher_order", "estimation"]
        version: ['1.8', '1.9', '1.10']
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64, arm64]
        exclude:
          - version: '1.8'
            os: ubuntu-latest
          - version: '1.8'
            os: windows-latest
          - version: '1.9'
            os: ubuntu-latest
          - version: '1.9'
            os: windows-latest
          - arch: arm64
            os: ubuntu-latest
          - arch: arm64
            os: windows-latest
          - arch: x64
            os: macos-latest
        include:
          - os: ubuntu-latest
            prefix: xvfb-run
          # - version: '1.10'
          #   os: macos-latest
          #   arch: x64
          #   test_set: "solver0"
          # - version: '1.10'
          #   os: macos-latest
          #   arch: x64
          #   test_set: "solver1"
          # - version: '1.10'
          #   os: macos-latest
          #   arch: x64
          #   test_set: "solver2"
          # - version: '1.10'
          #   os: macos-latest
          #   arch: x64
          #   test_set: "solver3"
          - version: '1.10'
            os: macos-latest
            arch: arm64
            test_set: "estimate_sw07"
          - version: '1.10'
            os: macos-latest
            arch: arm64
            test_set: "1st_order_inversion_estimation"
          - version: '1.10'
            os: macos-latest
            arch: arm64
            test_set: "2nd_order_estimation"
          - version: '1.10'
            os: macos-latest
            arch: arm64
            test_set: "3rd_order_estimation"
          # - version: '1.10'
          #   os: macOS-latest
          #   arch: x64
          #   test_set: "basic"
          - version: 'nightly'
            os: ubuntu-latest
            arch: x64
            test_set: "basic"
            allow_failure: true
          - version: '^1.11.0-0'
            os: macos-latest
            arch: arm64
            test_set: "basic"
            allow_failure: true
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}  
      - name: Set Custom Test Environment Variable (Windows)
        if: matrix.os == 'windows-latest'
        run: echo "TEST_SET=${{ matrix.test_set }}" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
      - name: Set Custom Test Environment Variable (non-Windows)
        if: matrix.os != 'windows-latest'
        run: echo "TEST_SET=${{ matrix.test_set }}" >> $GITHUB_ENV
      - name: Set JULIA_NUM_THREADS for estimation tests
        if: (matrix.version == '1.10' && (matrix.test_set == 'estimation' || matrix.test_set == 'estimate_sw07' || matrix.test_set == '1st_order_inversion_estimation' || matrix.test_set == '2nd_order_estimation' || matrix.test_set == '3rd_order_estimation'))
        run: echo "JULIA_NUM_THREADS=auto" >> $GITHUB_ENV
      - uses: actions/cache@v4
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        with:
          prefix: ${{ matrix.prefix }}  # for `xvfb-run`
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: lcov.info
